{"version":3,"sources":["util.ts","Fireworks.ts","Particle.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["random","min","max","Math","calculateDistance","p1x","p1y","p2x","p2y","sqrt","Firework","sx","sy","tx","ty","x","y","ctx","distanceToTarget","distanceTraveled","coordinates","coordinateCount","angle","speed","acceleration","brightness","targetRadius","this","push","atan2","Particle","type","hue","friction","gravity","alpha","decay","variation","PI","App","props","canvasRef","canvas","fireworks","particles","sound","limiterTotal","limiterTick","timerTotal","randomTime","timerTick","mousedown","cw","ch","mx","my","Audio","React","createRef","current","width","window","innerWidth","height","innerHeight","getContext","setInterval","run","className","ref","onMouseMove","e","handleMouseMove","onMouseDown","handleMouseToggle","onMouseUp","pageX","offsetLeft","pageY","offsetTop","isDown","preventDefault","index","firework","vx","cos","vy","sin","pop","unshift","createParticles","play","drawFirework","splice","textBaseline","textAlign","fillStyle","font","wish","Date","getFullYear","strokeText","fillText","drawWish","beginPath","moveTo","length","lineTo","strokeStyle","stroke","particle","particleCount","floor","globalCompositeOperation","fillRect","i","updateFirework","drawParticle","updateParticle","xPos","pow","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1df034d3.chunk.js","sourcesContent":["// get a random number within a range\r\nfunction random( min: number, max: number ) {\r\n    return min + Math.random()*(max-min);\r\n}\r\n\r\n// calculate the distance between two points\r\nfunction calculateDistance( p1x: number, p1y: number, p2x: number, p2y: number ) {\r\n    return Math.sqrt((p1x-p2x)*(p1x-p2x) + (p1y-p2y)*(p1y-p2y));\r\n}\r\n// current year\r\nfunction year(): number {\r\n    return new Date().getFullYear();\r\n}\r\n\r\nexport {random, calculateDistance, year}\r\n","import {random, calculateDistance} from './util'\r\n\r\nexport default class Firework {\r\n    x: number;\r\n    y: number;\r\n    sx: number;\r\n    sy: number;\r\n    tx: number;\r\n    ty: number;\r\n    ctx: any;\r\n    distanceToTarget: any;\r\n    distanceTraveled: number;\r\n    coordinates: any[];\r\n    coordinateCount: number;\r\n    angle: number;\r\n    speed: number;\r\n    acceleration: number;\r\n    brightness: any;\r\n    targetRadius: number;\r\n\r\n    constructor(sx: number, sy: number, tx: number, ty: number) {\r\n        //actual coordinates\r\n        this.x = sx;\r\n        this.y = sy;\r\n        //starting coordinate\r\n        this.sx = sx;\r\n        this.sy = sy;\r\n        //target coordinates\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n\r\n        this.distanceToTarget = calculateDistance(sx, sy, tx, ty);\r\n        this.distanceTraveled = 0;\r\n        //track past coordinates to creates a trail effect\r\n        this.coordinates = [];\r\n        this.coordinateCount = 2;\r\n        while (this.coordinateCount--) {\r\n            this.coordinates.push([this.x, this.y]);\r\n        }\r\n        this.angle = Math.atan2(ty - sy, tx - sx);\r\n        this.speed = 1;\r\n        this.acceleration = 1.2;\r\n        this.brightness = random(50, 70);\r\n        this.targetRadius = 1;\r\n    }\r\n}\r\n","import {random} from \"./util\";\r\n\r\nexport default class Particle {\r\n    x: number;\r\n    y: number;\r\n    angle: number = 0;\r\n    speed: number = 0;\r\n    brightness: any;\r\n    hue: number = 0;\r\n    type: number;\r\n    friction: number = 0;\r\n    gravity: number = 0;\r\n    alpha: number = 0;\r\n    decay: number = 0;\r\n    coordinates: any[];\r\n    coordinateCount: number;\r\n\r\n    constructor(x: number, y: number, type: number, hue: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.type = type;\r\n        // track the past coordinates of each particle to create a trail effect, increase the coordinate count to create more prominent trails\r\n        this.coordinates = [];\r\n        this.coordinateCount = 6;\r\n        while (this.coordinateCount--) {\r\n            this.coordinates.push([this.x, this.y]);\r\n        }\r\n        // TODO Improve\r\n        let variation = random(1, 5);\r\n        switch (type) {\r\n            case 1:\r\n                if (variation < 2) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 15);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 4;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = random(hue - 50, hue + 50);\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.01, 0.02);\r\n                }\r\n                else if (variation < 3) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 5);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 3;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = random(hue - 50, hue);\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else if (variation < 4) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 8);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 3;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = random(hue, hue + 50);\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 15);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 3;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = random(hue - 50, hue + 50);\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.3);\r\n                }\r\n                break;\r\n            case 2:\r\n                // let variation = random(1, 5);\r\n                if (variation < 2) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 10);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 4;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 100;\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.01, 0.02);\r\n                }\r\n                else if (variation < 3) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 21);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 3;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 100;\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else if (variation < 4) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 3);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 3;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 100;\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 5);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 3;\r\n                    // set the hue to a random number +-20 of the othis.hue = 100;\r\n                    this.hue = 100;\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.3);\r\n                }\r\n                break;\r\n            case 3:\r\n                // let variation = random(1, 5);\r\n                // var hue = 10;\r\n                if (variation < 2) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(10, 15);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 4;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 60;\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.01, 0.02);\r\n                }\r\n                else if (variation < 3) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(11, 15);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 3;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 10;\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else if (variation < 4) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(11, 18);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 3;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 90;\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(11, 15);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 3;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 120;\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.3);\r\n                }\r\n                break;\r\n            case 4:\r\n                // var variation = random(1, 5);\r\n                if (variation < 2) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 10);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 4;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 300;\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.01, 0.02);\r\n                }\r\n                else if (variation < 3) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 21);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 3;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 300;\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else if (variation < 4) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 3);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 3;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 300;\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 5);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // gravity will be applied and pull the particle down\r\n                    this.gravity = 3;\r\n                    // set the hue to a random number +-20 of the othis.hue = 100;\r\n                    this.hue = 100;\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 1;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.3);\r\n                }\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {calculateDistance, random, year} from \"./util\";\nimport Firework from \"./Fireworks\";\nimport Particle from \"./Particle\";\n\nexport default class App extends React.Component{\n    private readonly canvasRef: React.RefObject<HTMLCanvasElement>;\n    private canvas: HTMLCanvasElement | null | undefined;\n    private ctx: CanvasRenderingContext2D | null | undefined;\n    private fireworks: Firework[] = [];\n    private particles: Particle[] = [];\n    private sound: HTMLAudioElement;\n    private hue: number = 120;\n    private limiterTotal: number = 20;\n    private limiterTick: number = 0;\n    private timerTotal: number = 0;\n    private randomTime: number = 0;\n    private timerTick: number = 0;\n    private mousedown: boolean = false;\n    private cw: number = 0;\n    private ch: number = 0;\n    private mx: number = 0;\n    private my: number = 0;\n\n    constructor(props: any) {\n        super(props);\n        this.sound = new Audio(\"/firework.mp3\");\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount(): void {\n        this.canvas = this.canvasRef.current;\n\n        if (this.canvas) {\n            this.cw = this.canvas.width = window.innerWidth;\n            this.ch = this.canvas.height = window.innerHeight;\n            this.ctx = this.canvas.getContext(\"2d\");\n            setInterval(() => {\n                this.run();\n            }, 25);\n        }\n    }\n\n    render(): React.ReactElement {\n        return (\n            <div className=\"App\">\n                <canvas\n                    ref={this.canvasRef}\n                    onMouseMove={(e) => this.handleMouseMove(e)}\n                    onMouseDown={(e) => this.handleMouseToggle(e, true)}\n                    onMouseUp={(e) => this.handleMouseToggle(e, false)}\n                />\n            </div>\n        );\n    }\n\n    handleMouseMove(e: React.MouseEvent<HTMLCanvasElement>) {\n        if (this.canvas) {\n            this.mx = e.pageX - this.canvas.offsetLeft;\n            this.my = e.pageY - this.canvas.offsetTop;\n        }\n    }\n\n    handleMouseToggle(e: React.MouseEvent<HTMLCanvasElement>, isDown: boolean) {\n        e.preventDefault();\n        this.mousedown = isDown;\n    }\n\n    // update firework\n    updateFirework(index: number) {\n        // if(this.distanceTraveled >= this.distanceToTarget ){\n        // fireworks.splice(index, 1);\n        // }\n        const firework = this.fireworks[0];\n        if (firework.targetRadius < 8) {\n            firework.targetRadius += 0.3;\n        }\n        else {\n            firework.targetRadius = 1;\n        }\n        firework.speed *= firework.acceleration;\n        let vx = Math.cos(firework.angle) * firework.speed, vy = Math.sin(firework.angle) * firework.speed;\n        firework.distanceTraveled = calculateDistance(firework.sx, firework.sy, firework.x + vx, firework.y + vy);\n        if (firework.distanceTraveled >= firework.distanceToTarget) {\n            firework.coordinates.pop();\n            firework.coordinates.unshift([firework.tx, firework.ty]);\n            //this.x = this.tx; this.y = this.ty;\n            this.createParticles(firework.x, firework.y);\n            this.sound.play();\n            this.drawFirework(index);\n            this.fireworks.splice(index, 1);\n        }\n        else {\n            firework.x += vx;\n            firework.y += vy;\n        }\n        firework.coordinates.pop();\n        firework.coordinates.unshift([firework.x, firework.y]);\n    }\n\n    drawWish() {\n        if (this.ctx) {\n            this.ctx.textBaseline = 'middle';\n            this.ctx.textAlign = 'center';\n            this.ctx.fillStyle = \"#fff\";\n            this.ctx.font = '80px san-serif';\n            const wish = `HAPPY NEW YEAR ${year()}`;\n            this.ctx.strokeText(wish, this.cw/2, this.ch/2.5);\n            this.ctx.fillText(\"SUMIT\", this.cw/2, this.ch/2);\n        }\n    }\n    // draw firework\n    drawFirework(index: number) {\n        if (this.ctx) {\n            const firework = this.fireworks[index];\n            this.drawWish();\n            this.ctx.beginPath();\n            // move to the last tracked coordinate in the set, then draw a line to the current x and y\n            this.ctx.moveTo(firework.coordinates[firework.coordinates.length - 1][0], firework.coordinates[firework.coordinates.length - 1][1]);\n            this.ctx.lineTo(firework.x, firework.y);\n            this.ctx.strokeStyle = 'hsl(' + this.hue + ', 100%, ' + firework.brightness + '%)';\n            this.ctx.stroke();\n            // ctx.beginPath();\n            // ctx.arc(this.tx, this.ty, this.targetRadius, 0, Math.PI*2);\n            // ctx.stroke();\n        }\n    }\n\n    // update particle\n    updateParticle(index: number) {\n        // slow down the particle\n        const particle = this.particles[index];\n        particle.speed *= particle.friction;\n        // apply velocity\n        particle.x += Math.cos(particle.angle) * particle.speed;\n        particle.y += Math.sin(particle.angle) * particle.speed + particle.gravity;\n        // fade out the particle\n        // this.alpha -= this.decay * this.alpha;\n        particle.alpha -= particle.decay;\n        if (particle.type === 4 && particle.alpha <= 0.5) {\n            particle.brightness += 50;\n            this.hue += 200;\n            if (particle.brightness >= 200)\n                particle.brightness = 0;\n        }\n        // remove the particle once the alpha is low enough, based on the passed in index\n        if (particle.alpha <= particle.decay) {\n            this.particles.splice(index, 1);\n        }\n        // remove last item in coordinates array\n        particle.coordinates.pop();\n        // add current coordinates to the start of the array\n        particle.coordinates.unshift([particle.x, particle.y]);\n    }\n    // draw particle\n    drawParticle(index: number) {\n        if (this.ctx) {\n            const particle = this.particles[index];\n            this.drawWish();\n            this.ctx.beginPath();\n            // move to the last tracked coordinates in the set, then draw a line to the current x and y\n            this.ctx.moveTo(particle.coordinates[particle.coordinates.length - 1][0], particle.coordinates[particle.coordinates.length - 1][1]);\n            this.ctx.lineTo(particle.x, particle.y);\n            this.ctx.strokeStyle = 'hsla(' + this.hue + ', 100%, ' + particle.brightness + '%, ' + particle.alpha + ')';\n            this.ctx.stroke();\n        }\n    }\n\n    createParticles( x: number, y: number ) {\n        var particleCount = 300;\n        var type = Math.floor(random(1, 5));\n        while(particleCount--){\n            this.particles.push(new Particle(x, y, type, this.hue));\n        }\n    }\n\n    run() {\n        //requestAnimFrame(loop);\n        this.hue += 0.5;\n        if (this.ctx) {\n            this.ctx.globalCompositeOperation = \"destination-out\";\n            this.ctx.fillStyle =  'rgba(0, 0, 0, 0.3)';\n            this.ctx.fillRect(0, 0, this.cw, this.ch);\n\n            this.ctx.globalCompositeOperation = \"lighter\";\n\n            let i = this.fireworks.length;\n            while(i--)\n            {\n                this.drawFirework(i);\n                this.updateFirework(i);\n            }\n\n            // loop over each particle, draw it, update it\n            i = this.particles.length;\n            while( i-- ) {\n                this.drawParticle(i);\n                this.updateParticle(i);\n            }\n\n            if( this.timerTick >= this.timerTotal + this.randomTime ){\n                if (!this.mousedown){\n                    /* uniform */\n                    // fireworks.push( new Firework(cw/2, ch, 100, random(0, ch/2)));\n                    /* 0 to cw/2, more to*/\n                    // fireworks.push( new Firework(cw/2, ch, Math.floor(Math.sqrt(random(0, cw*cw/4))), random(0, ch/2)));\n\n                    let xPos = Math.pow(Math.floor((random(-Math.pow(this.cw/2, 1/3), Math.pow(this.cw/2, 1/3)))), 3);\n                    xPos += this.cw/2;\n                    this.fireworks.push( new Firework(this.cw/2, this.ch, xPos, random(0, this.ch/2)));\n                    // fireworks.push( new Firework(cw/2, ch, random(-10, 100), random(0, ch/2)));\n\n                    this.timerTick = 0;\n                    this.randomTime = Math.pow(random(2, 4), 2);\n                }\n            } else {\n                this.timerTick++;\n            }\n\n\n            // limit the rate at which fireworks get launched when mouse is down\n            if( this.limiterTick >= this.limiterTotal ) {\n                if( this.mousedown ) {\n                    // start the firework at the bottom middle of the screen, then set the current mouse coordinates as the target\n                    this.fireworks.push( new Firework( this.cw / 2, this.ch, this.mx, this.my ) );\n                    this.limiterTick = 0;\n                } else {\n                    this.limiterTick= this.limiterTotal;\n                }\n            } else {\n                this.limiterTick++;\n            }\n        }\n\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}