{"version":3,"sources":["util.ts","Fireworks.ts","Particle.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["random","min","max","Math","calculateDistance","p1x","p1y","p2x","p2y","sqrt","Firework","sx","sy","tx","ty","x","y","ctx","distanceToTarget","distanceTraveled","coordinates","coordinateCount","angle","speed","acceleration","brightness","targetRadius","this","push","atan2","Particle","type","hue","friction","gravity","alpha","decay","terminal_velocity","variation","PI","App","props","Gravity","canvasRef","canvas","fireworks","particles","sound","limiterTotal","limiterTick","timerTotal","randomTime","timerTick","mousedown","cw","ch","mx","my","wish","name","urlStr","window","location","href","url","URL","params","searchParams","get","Audio","origin","pathname","React","createRef","current","width","innerWidth","height","innerHeight","getContext","setInterval","run","className","ref","onMouseMove","e","handleMouseMove","onMouseDown","handleMouseToggle","onMouseUp","pageX","offsetLeft","pageY","offsetTop","isDown","preventDefault","index","firework","vx","cos","vy","sin","pop","unshift","createParticles","play","drawFirework","splice","textBaseline","textAlign","fillStyle","font","strokeText","toUpperCase","fillText","drawWish","beginPath","moveTo","length","lineTo","strokeStyle","stroke","particle","particleCount","floor","globalCompositeOperation","fillRect","i","updateFirework","drawParticle","updateParticle","xPos","pow","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mOACA,SAASA,EAAQC,EAAaC,GAC1B,OAAOD,EAAME,KAAKH,UAAUE,EAAID,GAIpC,SAASG,EAAmBC,EAAaC,EAAaC,EAAaC,GAC/D,OAAOL,KAAKM,MAAMJ,EAAIE,IAAMF,EAAIE,IAAQD,EAAIE,IAAMF,EAAIE,I,ICLrCE,EAqBjB,WAAYC,EAAYC,EAAYC,EAAYC,GAiB5C,IAjByD,yBAjB7DC,OAiB4D,OAhB5DC,OAgB4D,OAf5DL,QAe4D,OAd5DC,QAc4D,OAb5DC,QAa4D,OAZ5DC,QAY4D,OAX5DG,SAW4D,OAV5DC,sBAU4D,OAT5DC,sBAS4D,OAR5DC,iBAQ4D,OAP5DC,qBAO4D,OAN5DC,WAM4D,OAL5DC,WAK4D,OAJ5DC,kBAI4D,OAH5DC,gBAG4D,OAF5DC,kBAE4D,EAExDC,KAAKZ,EAAIJ,EACTgB,KAAKX,EAAIJ,EAETe,KAAKhB,GAAKA,EACVgB,KAAKf,GAAKA,EAEVe,KAAKd,GAAKA,EACVc,KAAKb,GAAKA,EAEVa,KAAKT,iBAAmBd,EAAkBO,EAAIC,EAAIC,EAAIC,GACtDa,KAAKR,iBAAmB,EAGxBQ,KAAKP,YAAc,GACnBO,KAAKN,gBAAkB,EAChBM,KAAKN,mBACRM,KAAKP,YAAYQ,KAAK,CAACD,KAAKZ,EAAGY,KAAKX,IAExCW,KAAKL,MAAQnB,KAAK0B,MAAMf,EAAKF,EAAIC,EAAKF,GACtCgB,KAAKJ,MAAQ,EACbI,KAAKH,aAAe,KACpBG,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKD,aAAe,GC7CPI,EAkBjB,WAAYf,EAAWC,EAAWe,EAAcC,GAQ5C,IAR0D,yBAf9DjB,OAe6D,OAd7DC,OAc6D,OAb7DM,MAAgB,EAa6C,KAZ7DC,MAAgB,EAY6C,KAX7DE,gBAW6D,OAV7DO,IAAc,EAU+C,KAT7DD,UAS6D,OAR7DE,SAAmB,EAQ0C,KAP7DC,QAAkB,EAO2C,KAN7DC,MAAgB,EAM6C,KAL7DC,MAAgB,EAK6C,KAJ7DhB,iBAI6D,OAH7DC,qBAG6D,OAF7DgB,uBAE6D,EACzDV,KAAKZ,EAAIA,EACTY,KAAKX,EAAIA,EACTW,KAAKI,KAAOA,EACZJ,KAAKU,kBAAoB,EAEzBV,KAAKP,YAAc,GACnBO,KAAKN,gBAAkB,EAChBM,KAAKN,mBACRM,KAAKP,YAAYQ,KAAK,CAACD,KAAKZ,EAAGY,KAAKX,IAGxC,IAAIsB,EAAYtC,EAAO,EAAG,GAC1B,OAAQ+B,GACJ,KAAK,EACGO,EAAY,GAEZX,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,EAAG,IAEvB2B,KAAKM,SAAW,GAEhBN,KAAKK,IAAMhC,EAAOgC,EAAM,GAAIA,EAAM,IAClCL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,IAAM,MAErBsC,EAAY,GAEjBX,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,EAAG,GAEvB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAMhC,EAAOgC,EAAM,GAAIA,GAC5BL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,KAAO,MAEtBsC,EAAY,GAEjBX,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,EAAG,GAEvB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAMhC,EAAOgC,EAAKA,EAAM,IAC7BL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,KAAO,OAI3B2B,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,EAAG,IAEvB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAMhC,EAAOgC,EAAM,GAAIA,EAAM,IAClCL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,KAAO,KAE/B,MACJ,KAAK,EAEGsC,EAAY,GAEZX,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,EAAG,IAEvB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAM,IACXL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,IAAM,MAErBsC,EAAY,GAEjBX,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,EAAG,IAEvB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAM,IACXL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,KAAO,MAEtBsC,EAAY,GAEjBX,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,EAAG,GAEvB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAM,IACXL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,KAAO,OAI3B2B,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,EAAG,GAEvB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAM,IACXL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,KAAO,KAE/B,MACJ,KAAK,EAGGsC,EAAY,GAEZX,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,GAAI,IAExB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAM,GACXL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,IAAM,MAErBsC,EAAY,GAEjBX,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,GAAI,IAGxB2B,KAAKK,IAAM,GACXL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,KAAO,MAEtBsC,EAAY,GAEjBX,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,GAAI,IAExB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAM,GACXL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,KAAO,OAI3B2B,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,GAAI,IAExB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAM,IACXL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,KAAO,KAE/B,MACJ,KAAK,EAEGsC,EAAY,GAEZX,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,EAAG,IAEvB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAM,IACXL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,IAAM,MAErBsC,EAAY,GAEjBX,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,EAAG,IAEvB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAM,IACXL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,KAAO,MAEtBsC,EAAY,GAEjBX,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,EAAG,GAEvB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAM,IACXL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,KAAO,OAI3B2B,KAAKL,MAAQtB,EAAO,EAAa,EAAVG,KAAKoC,IAC5BZ,KAAKJ,MAAQvB,EAAO,EAAG,GAEvB2B,KAAKM,SAAW,IAEhBN,KAAKK,IAAM,IACXL,KAAKF,WAAazB,EAAO,GAAI,IAC7B2B,KAAKQ,MAAQ,EAEbR,KAAKS,MAAQpC,EAAO,KAAO,OCpP1BwC,E,YAsBjB,WAAYC,GAAa,IAAD,uBACpB,4CAAMA,KAtBOC,QAAkB,EAqBX,EApBPC,eAoBO,IAnBhBC,YAmBgB,IAlBhB3B,SAkBgB,IAjBhB4B,UAAwB,GAiBR,EAhBhBC,UAAwB,GAgBR,EAfhBC,WAegB,IAdhBf,IAAc,IAcE,EAbhBgB,aAAuB,GAaP,EAZhBC,YAAsB,EAYN,EAXhBC,WAAqB,GAWL,EAVhBC,WAAqB,EAUL,EAThBC,UAAoB,EASJ,EARhBC,WAAqB,EAQL,EAPhBC,GAAa,EAOG,EANhBC,GAAa,EAMG,EALhBC,GAAa,EAKG,EAJhBC,GAAa,EAIG,EAHPC,UAGO,IAFPC,UAEO,EAEpB,IAAMC,EAASC,OAAOC,SAASC,KACzBC,EAAW,IAAIC,IAAIL,GACnBM,EAA0BF,EAAIG,aAJhB,OAKpB,EAAKT,KAAOQ,EAAOE,IAAI,WACvB,EAAKT,KAAOO,EAAOE,IAAI,MACvB,EAAKrB,MAAQ,IAAIsB,MAAML,EAAIM,OAASN,EAAIO,SAAW,iBACnD,EAAK5B,UAAY6B,IAAMC,YARH,E,iFAWG,IAAD,OACtB9C,KAAKiB,OAASjB,KAAKgB,UAAU+B,QAEzB/C,KAAKiB,SACLjB,KAAK2B,GAAK3B,KAAKiB,OAAO+B,MAAQd,OAAOe,WACrCjD,KAAK4B,GAAK5B,KAAKiB,OAAOiC,OAAShB,OAAOiB,YACtCnD,KAAKV,IAAMU,KAAKiB,OAAOmC,WAAW,MAClCC,aAAY,WACR,EAAKC,QACN,O,+BAImB,IAAD,OACzB,OACI,yBAAKC,UAAU,OACX,4BACIC,IAAKxD,KAAKgB,UACVyC,YAAa,SAACC,GAAD,OAAO,EAAKC,gBAAgBD,IACzCE,YAAa,SAACF,GAAD,OAAO,EAAKG,kBAAkBH,GAAG,IAC9CI,UAAW,SAACJ,GAAD,OAAO,EAAKG,kBAAkBH,GAAG,S,sCAM5CA,GACR1D,KAAKiB,SACLjB,KAAK6B,GAAK6B,EAAEK,MAAQ/D,KAAKiB,OAAO+C,WAChChE,KAAK8B,GAAK4B,EAAEO,MAAQjE,KAAKiB,OAAOiD,a,wCAItBR,EAAwCS,GACtDT,EAAEU,iBACFpE,KAAK0B,UAAYyC,I,qCAINE,GAIX,IAAMC,EAAWtE,KAAKkB,UAAU,GAC5BoD,EAASvE,aAAe,EACxBuE,EAASvE,cAAgB,GAGzBuE,EAASvE,aAAe,EAE5BuE,EAAS1E,OAAS0E,EAASzE,aAG3B,IAAI0E,EAAK/F,KAAKgG,IAAIF,EAAS3E,OAAS2E,EAAS1E,MAAO6E,EAAKjG,KAAKkG,IAAIJ,EAAS3E,OAAS2E,EAAS1E,MAE7F0E,EAAS9E,iBAAmBf,EAAkB6F,EAAStF,GAAIsF,EAASrF,GAAIqF,EAASlF,EAAImF,EAAID,EAASjF,EAAIoF,GAIlGH,EAAS9E,kBAAoB8E,EAAS/E,kBACtC+E,EAAS7E,YAAYkF,MACrBL,EAAS7E,YAAYmF,QAAQ,CAACN,EAASpF,GAAIoF,EAASnF,KAEpDa,KAAK6E,gBAAgBP,EAASlF,EAAGkF,EAASjF,GAC1CW,KAAKoB,MAAM0D,OACX9E,KAAK+E,aAAaV,GAClBrE,KAAKkB,UAAU8D,OAAOX,EAAO,KAG7BC,EAASlF,GAAKmF,EACdD,EAASjF,GAAKoF,GAIlBH,EAAS7E,YAAYkF,MACrBL,EAAS7E,YAAYmF,QAAQ,CAACN,EAASlF,EAAGkF,EAASjF,M,iCAI/CW,KAAKV,KAAOU,KAAK+B,MAAQ/B,KAAKgC,OAC9BhC,KAAKV,IAAI2F,aAAe,SACxBjF,KAAKV,IAAI4F,UAAY,SACrBlF,KAAKV,IAAI6F,UAAY,OACjBnF,KAAK2B,IAAM,IACX3B,KAAKV,IAAI8F,KAAO,iBACTpF,KAAK2B,IAAM,IAClB3B,KAAKV,IAAI8F,KAAO,iBAEhBpF,KAAKV,IAAI8F,KAAO,iBAEpBpF,KAAKV,IAAI+F,WAAWrF,KAAK+B,KAAKuD,cAAetF,KAAK2B,GAAG,EAAG3B,KAAK4B,GAAG,KAChE5B,KAAKV,IAAIiG,SAASvF,KAAKgC,KAAKsD,cAAetF,KAAK2B,GAAG,EAAG3B,KAAK4B,GAAG,M,mCAIzDyC,GAKT,GAAIrE,KAAKV,IAAK,CACV,IAAMgF,EAAWtE,KAAKkB,UAAUmD,GAChCrE,KAAKwF,WACLxF,KAAKV,IAAImG,YAETzF,KAAKV,IAAIoG,OAAOpB,EAAS7E,YAAY6E,EAAS7E,YAAYkG,OAAS,GAAG,GAAIrB,EAAS7E,YAAY6E,EAAS7E,YAAYkG,OAAS,GAAG,IAChI3F,KAAKV,IAAIsG,OAAOtB,EAASlF,EAAGkF,EAASjF,GACrCW,KAAKV,IAAIuG,YAAc,OAAS7F,KAAKK,IAAM,WAAaiE,EAASxE,WAAa,KAC9EE,KAAKV,IAAIwG,Y,qCAaFzB,GAEX,IAAM0B,EAAW/F,KAAKmB,UAAUkD,GAChC0B,EAASnG,OAASmG,EAASzF,SAE3ByF,EAAS3G,GAAKZ,KAAKgG,IAAIuB,EAASpG,OAASoG,EAASnG,MAGlDmG,EAAS1G,GAAKb,KAAKkG,IAAIqB,EAASpG,OAASoG,EAASnG,MAAQI,KAAKe,QAK/DgF,EAASvF,OAASuF,EAAStF,MACL,IAAlBsF,EAAS3F,MAAc2F,EAASvF,OAAS,KACzCuF,EAASjG,YAAc,GACvBE,KAAKK,KAAO,IACR0F,EAASjG,YAAc,MACvBiG,EAASjG,WAAa,IAG1BiG,EAASvF,OAASuF,EAAStF,OAC3BT,KAAKmB,UAAU6D,OAAOX,EAAO,GAGjC0B,EAAStG,YAAYkF,MAErBoB,EAAStG,YAAYmF,QAAQ,CAACmB,EAAS3G,EAAG2G,EAAS1G,M,mCAG1CgF,GAGT,GAAIrE,KAAKV,IAAK,CACV,IAAMyG,EAAW/F,KAAKmB,UAAUkD,GAChCrE,KAAKwF,WACLxF,KAAKV,IAAImG,YAETzF,KAAKV,IAAIoG,OAAOK,EAAStG,YAAYsG,EAAStG,YAAYkG,OAAS,GAAG,GAAII,EAAStG,YAAYsG,EAAStG,YAAYkG,OAAS,GAAG,IAChI3F,KAAKV,IAAIsG,OAAOG,EAAS3G,EAAG2G,EAAS1G,GACrCW,KAAKV,IAAIuG,YAAc,QAAU7F,KAAKK,IAAM,WAAa0F,EAASjG,WAAa,MAAQiG,EAASvF,MAAQ,IACxGR,KAAKV,IAAIwG,Y,sCAIA1G,EAAWC,GAIxB,IAFA,IAAI2G,EAAgB,IAChB5F,EAAO5B,KAAKyH,MAAM5H,EAAO,EAAG,IAC1B2H,KACFhG,KAAKmB,UAAUlB,KAAK,IAAIE,EAASf,EAAGC,EAAGe,EAAMJ,KAAKK,Q,4BAOtD,GADAL,KAAKK,KAAO,GACRL,KAAKV,IAAK,CACVU,KAAKV,IAAI4G,yBAA2B,kBACpClG,KAAKV,IAAI6F,UAAa,qBACtBnF,KAAKV,IAAI6G,SAAS,EAAG,EAAGnG,KAAK2B,GAAI3B,KAAK4B,IAEtC5B,KAAKV,IAAI4G,yBAA2B,UAGpC,IADA,IAAIE,EAAIpG,KAAKkB,UAAUyE,OACjBS,KAEFpG,KAAK+E,aAAaqB,GAClBpG,KAAKqG,eAAeD,GAKxB,IADAA,EAAIpG,KAAKmB,UAAUwE,OACZS,KACHpG,KAAKsG,aAAaF,GAClBpG,KAAKuG,eAAeH,GAGxB,GAAIpG,KAAKyB,WAAazB,KAAKuB,WAAavB,KAAKwB,YACzC,IAAKxB,KAAK0B,UAAU,CAMhB,IAAI8E,EAAOhI,KAAKiI,IAAIjI,KAAKyH,MAAO5H,GAAQG,KAAKiI,IAAIzG,KAAK2B,GAAG,EAAG,EAAE,GAAInD,KAAKiI,IAAIzG,KAAK2B,GAAG,EAAG,EAAE,KAAO,GAC/F6E,GAAQxG,KAAK2B,GAAG,EAChB3B,KAAKkB,UAAUjB,KAAM,IAAIlB,EAASiB,KAAK2B,GAAG,EAAG3B,KAAK4B,GAAI4E,EAAMnI,EAAO,EAAG2B,KAAK4B,GAAG,KAG9E5B,KAAKyB,UAAY,EACjBzB,KAAKwB,WAAahD,KAAKiI,IAAIpI,EAAO,EAAG,GAAI,SAG7C2B,KAAKyB,YAKLzB,KAAKsB,aAAetB,KAAKqB,aACrBrB,KAAK0B,WAEL1B,KAAKkB,UAAUjB,KAAM,IAAIlB,EAAUiB,KAAK2B,GAAK,EAAG3B,KAAK4B,GAAI5B,KAAK6B,GAAI7B,KAAK8B,KACvE9B,KAAKsB,YAAc,GAEnBtB,KAAKsB,YAAatB,KAAKqB,aAG3BrB,KAAKsB,mB,GAtQYuB,IAAM6D,WCMnBC,QACW,cAA7BzE,OAAOC,SAASyE,UAEe,UAA7B1E,OAAOC,SAASyE,UAEhB1E,OAAOC,SAASyE,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.49630bb5.chunk.js","sourcesContent":["// get a random number within a range\r\nfunction random( min: number, max: number ) {\r\n    return min + Math.random()*(max-min);\r\n}\r\n\r\n// calculate the distance between two points\r\nfunction calculateDistance( p1x: number, p1y: number, p2x: number, p2y: number ) {\r\n    return Math.sqrt((p1x-p2x)*(p1x-p2x) + (p1y-p2y)*(p1y-p2y));\r\n}\r\n// current year\r\nfunction year(): number {\r\n    return new Date().getFullYear();\r\n}\r\n\r\n/*\r\nfunction requestInterval(fn: any, delay: number) {\r\n    if( !window.requestAnimationFrame)\r\n        return window.setInterval(fn, delay);\r\n\r\n    let start = new Date().getTime(),\r\n        handle = {\r\n            value: undefined\r\n        };\r\n\r\n    function loop() {\r\n        const current = new Date().getTime(),\r\n            delta = current - start;\r\n\r\n        if(delta >= delay) {\r\n            fn.call();\r\n            start = new Date().getTime();\r\n        }\r\n\r\n        handle.value = requestAnimFrame(loop);\r\n    };\r\n\r\n    handle.value = requestAnimFrame(loop);\r\n    return handle;\r\n}*/\r\n\r\nexport {random, calculateDistance, year}\r\n","import {random, calculateDistance} from './util'\r\n\r\nexport default class Firework {\r\n    // The single actual object launched from the ground are Firework objects. It rises \r\n    // up and explodes after some distance. After explosion, it is no longer Firework, but it is now\r\n    // a group of Particle objects.\r\n    x: number;\r\n    y: number;\r\n    sx: number;\r\n    sy: number;\r\n    tx: number;\r\n    ty: number;\r\n    ctx: any;\r\n    distanceToTarget: any;\r\n    distanceTraveled: number;\r\n    coordinates: any[];\r\n    coordinateCount: number;\r\n    angle: number;\r\n    speed: number;\r\n    acceleration: number;\r\n    brightness: any;\r\n    targetRadius: number;\r\n\r\n    constructor(sx: number, sy: number, tx: number, ty: number) {\r\n        //actual coordinates\r\n        this.x = sx;\r\n        this.y = sy;\r\n        //starting coordinate\r\n        this.sx = sx;\r\n        this.sy = sy;\r\n        //target coordinates\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n\r\n        this.distanceToTarget = calculateDistance(sx, sy, tx, ty);\r\n        this.distanceTraveled = 0;\r\n        //track past coordinates to creates a trail effect\r\n        // Firework has small tail of 2 units, Particles have larger tail of 6 units for the greater effect\r\n        this.coordinates = [];\r\n        this.coordinateCount = 2;\r\n        while (this.coordinateCount--) {\r\n            this.coordinates.push([this.x, this.y]);\r\n        }\r\n        this.angle = Math.atan2(ty - sy, tx - sx);\r\n        this.speed = 1;\r\n        this.acceleration = 1.05;\r\n        this.brightness = random(50, 70);\r\n        this.targetRadius = 1;\r\n    }\r\n}\r\n","import {random} from \"./util\";\r\n\r\nexport default class Particle {\r\n    // After explosion the scattered objects are particles. They are moving away \r\n    // from the common center after explosion\r\n    x: number;\r\n    y: number;\r\n    angle: number = 0;\r\n    speed: number = 0;\r\n    brightness: any;\r\n    hue: number = 0;\r\n    type: number;\r\n    friction: number = 0;\r\n    gravity: number = 0;\r\n    alpha: number = 0;\r\n    decay: number = 0;\r\n    coordinates: any[];\r\n    coordinateCount: number;\r\n    terminal_velocity: number;\r\n\r\n    constructor(x: number, y: number, type: number, hue: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.type = type;\r\n        this.terminal_velocity = 7;\r\n        // track the past coordinates of each particle to create a trail effect, increase the coordinate count to create more prominent trails\r\n        this.coordinates = [];\r\n        this.coordinateCount = 4;\r\n        while (this.coordinateCount--) {\r\n            this.coordinates.push([this.x, this.y]);\r\n        }\r\n        // TODO Improve\r\n        let variation = random(1, 5);\r\n        switch (type) {\r\n            case 1:\r\n                if (variation < 2) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 10);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.80;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = random(hue - 50, hue + 50);\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.01, 0.02);\r\n                }\r\n                else if (variation < 3) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 5);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = random(hue - 50, hue);\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else if (variation < 4) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 8);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = random(hue, hue + 50);\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 10);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = random(hue - 50, hue + 50);\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.3);\r\n                }\r\n                break;\r\n            case 2:\r\n                // let variation = random(1, 5);\r\n                if (variation < 2) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 10);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 100;\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.01, 0.02);\r\n                }\r\n                else if (variation < 3) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 21);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 100;\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else if (variation < 4) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 3);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 100;\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 5);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the othis.hue = 100;\r\n                    this.hue = 100;\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.3);\r\n                }\r\n                break;\r\n            case 3:\r\n                // let variation = random(1, 5);\r\n                // var hue = 10;\r\n                if (variation < 2) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(10, 15);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 60;\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.01, 0.02);\r\n                }\r\n                else if (variation < 3) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(11, 15);\r\n                    // friction will slow the particle down\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 10;\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else if (variation < 4) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(11, 18);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 90;\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(11, 15);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 120;\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.3);\r\n                }\r\n                break;\r\n            case 4:\r\n                // var variation = random(1, 5);\r\n                if (variation < 2) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 10);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 300;\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.01, 0.02);\r\n                }\r\n                else if (variation < 3) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 21);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 300;\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else if (variation < 4) {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 3);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the overall hue variable\r\n                    this.hue = 300;\r\n                    this.brightness = random(50, 80);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.03);\r\n                }\r\n                else {\r\n                    // set a random angle in all possible directions, in radians\r\n                    this.angle = random(0, Math.PI * 2);\r\n                    this.speed = random(1, 5);\r\n                    // friction will slow the particle down\r\n                    this.friction = 0.95;\r\n                    // set the hue to a random number +-20 of the othis.hue = 100;\r\n                    this.hue = 100;\r\n                    this.brightness = random(10, 20);\r\n                    this.alpha = 3;\r\n                    // set how fast the particle fades out\r\n                    this.decay = random(0.015, 0.3);\r\n                }\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {calculateDistance, random} from \"./util\";\r\nimport Firework from \"./Fireworks\";\r\nimport Particle from \"./Particle\";\r\n\r\nexport default class App extends React.Component{\r\n    private readonly Gravity: number = 4;\r\n    private readonly canvasRef: React.RefObject<HTMLCanvasElement>;\r\n    private canvas: HTMLCanvasElement | null | undefined;\r\n    private ctx: CanvasRenderingContext2D | null | undefined;\r\n    private fireworks: Firework[] = [];\r\n    private particles: Particle[] = [];\r\n    private sound: HTMLAudioElement;\r\n    private hue: number = 120;\r\n    private limiterTotal: number = 20;\r\n    private limiterTick: number = 0;\r\n    private timerTotal: number = 10;\r\n    private randomTime: number = 0;\r\n    private timerTick: number = 0;\r\n    private mousedown: boolean = false;\r\n    private cw: number = 0;\r\n    private ch: number = 0;\r\n    private mx: number = 0;\r\n    private my: number = 0;\r\n    private readonly wish: string | null;\r\n    private readonly name: string | null;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        const urlStr = window.location.href;\r\n        const url: URL = new URL(urlStr);\r\n        const params: URLSearchParams = url.searchParams;\r\n        this.wish = params.get(\"message\");\r\n        this.name = params.get(\"to\");\r\n        this.sound = new Audio(url.origin + url.pathname + \"/firework.mp3\");\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.canvas = this.canvasRef.current;\r\n\r\n        if (this.canvas) {\r\n            this.cw = this.canvas.width = window.innerWidth;\r\n            this.ch = this.canvas.height = window.innerHeight;\r\n            this.ctx = this.canvas.getContext(\"2d\");\r\n            setInterval(() => {\r\n                this.run();\r\n            }, 25);\r\n        }\r\n    }\r\n\r\n    render(): React.ReactElement {\r\n        return (\r\n            <div className=\"App\">\r\n                <canvas\r\n                    ref={this.canvasRef}\r\n                    onMouseMove={(e) => this.handleMouseMove(e)}\r\n                    onMouseDown={(e) => this.handleMouseToggle(e, true)}\r\n                    onMouseUp={(e) => this.handleMouseToggle(e, false)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleMouseMove(e: React.MouseEvent<HTMLCanvasElement>) {\r\n        if (this.canvas) {\r\n            this.mx = e.pageX - this.canvas.offsetLeft;\r\n            this.my = e.pageY - this.canvas.offsetTop;\r\n        }\r\n    }\r\n\r\n    handleMouseToggle(e: React.MouseEvent<HTMLCanvasElement>, isDown: boolean) {\r\n        e.preventDefault();\r\n        this.mousedown = isDown;\r\n    }\r\n\r\n    // update firework\r\n    updateFirework(index: number) {\r\n        // if(this.distanceTraveled >= this.distanceToTarget ){\r\n        // fireworks.splice(index, 1);\r\n        // }\r\n        const firework = this.fireworks[0];\r\n        if (firework.targetRadius < 8) {\r\n            firework.targetRadius += 0.3;\r\n        }\r\n        else {\r\n            firework.targetRadius = 1;\r\n        }\r\n        firework.speed += firework.acceleration;\r\n        \r\n        // This is the line where we are updating the velocity of firework, can add gravity effect here TODO\r\n        let vx = Math.cos(firework.angle) * firework.speed, vy = Math.sin(firework.angle) * firework.speed;\r\n        \r\n        firework.distanceTraveled = calculateDistance(firework.sx, firework.sy, firework.x + vx, firework.y + vy);\r\n        \r\n        // if target point reached, explode the firework \r\n        // delete the Firework object, create Particle objects, play some nice sound\r\n        if (firework.distanceTraveled >= firework.distanceToTarget) {\r\n            firework.coordinates.pop();\r\n            firework.coordinates.unshift([firework.tx, firework.ty]);\r\n            //this.x = this.tx; this.y = this.ty;\r\n            this.createParticles(firework.x, firework.y);\r\n            this.sound.play();\r\n            this.drawFirework(index);\r\n            this.fireworks.splice(index, 1);\r\n        }\r\n        else { // if target not reached, then update  the firework coordinates\r\n            firework.x += vx;\r\n            firework.y += vy;\r\n        }\r\n\r\n        // coordinates array we use to keep a nice tail\r\n        firework.coordinates.pop();\r\n        firework.coordinates.unshift([firework.x, firework.y]);\r\n    }\r\n\r\n    drawWish() {\r\n        if (this.ctx && this.wish && this.name) {\r\n            this.ctx.textBaseline = 'middle';\r\n            this.ctx.textAlign = 'center';\r\n            this.ctx.fillStyle = \"#fff\";\r\n            if (this.cw <= 400) {\r\n                this.ctx.font = '30px san-serif';\r\n            } else if (this.cw <= 600) {\r\n                this.ctx.font = '40px san-serif';\r\n            } else {\r\n                this.ctx.font = '60px san-serif';\r\n            }\r\n            this.ctx.strokeText(this.wish.toUpperCase(), this.cw/2, this.ch/2.5);\r\n            this.ctx.fillText(this.name.toUpperCase(), this.cw/2, this.ch/2);\r\n        }\r\n    }\r\n    // draw firework\r\n    drawFirework(index: number) {\r\n        // Drawing firework is pretty simple, just draw a straight line from end of \r\n        // the current position to the end of tail. For firework \r\n        // we have small tail of 2 units, that means the line will be 2 units long only.\r\n        // the tail we keep track using \"firework.coordinates\" array\r\n        if (this.ctx) {\r\n            const firework = this.fireworks[index];\r\n            this.drawWish();\r\n            this.ctx.beginPath();\r\n            // move to the last tracked coordinate in the set, then draw a line to the current x and y\r\n            this.ctx.moveTo(firework.coordinates[firework.coordinates.length - 1][0], firework.coordinates[firework.coordinates.length - 1][1]);\r\n            this.ctx.lineTo(firework.x, firework.y);\r\n            this.ctx.strokeStyle = 'hsl(' + this.hue + ', 100%, ' + firework.brightness + '%)';\r\n            this.ctx.stroke();\r\n            // ctx.beginPath();\r\n            // ctx.arc(this.tx, this.ty, this.targetRadius, 0, Math.PI*2);\r\n            // ctx.stroke();\r\n        }\r\n    }\r\n\r\n    // update particle\r\n    // particles are effected by gravity, and hence they move in a curved parabolic path, looks good\r\n    // But the gravity implementation is wierd, non-sensical, and just somehow added for the effect.\r\n    // Each particle it seems are affected by different personal gravity (why?? check ./particle),\r\n    // TODO: Rework the gravity interactions\r\n\r\n    updateParticle(index: number) {\r\n        // slow down the particle\r\n        const particle = this.particles[index];\r\n        particle.speed *= particle.friction;\r\n        // apply velocity\r\n        particle.x += Math.cos(particle.angle) * particle.speed;\r\n\r\n        // not wierd, v2 = v1 + at; but for time slices of 1 seconds t = 1, v2 = v1 + a is fine\r\n        particle.y += Math.sin(particle.angle) * particle.speed + this.Gravity;        \r\n        // fade out the particle\r\n        // this.alpha -= this.decay * this.alpha;\r\n\r\n        // This is how we see the particles changing color as they scatter in  the sky\r\n        particle.alpha -= particle.decay;\r\n        if (particle.type === 4 && particle.alpha <= 0.5) {\r\n            particle.brightness += 50;\r\n            this.hue += 200;\r\n            if (particle.brightness >= 200)\r\n                particle.brightness = 0;\r\n        }\r\n        // remove the particle once the alpha is low enough, based on the passed in index\r\n        if (particle.alpha <= particle.decay) {\r\n            this.particles.splice(index, 1);\r\n        }\r\n        // remove last item in coordinates array\r\n        particle.coordinates.pop();\r\n        // add current coordinates to the start of the array\r\n        particle.coordinates.unshift([particle.x, particle.y]);\r\n    }\r\n    // draw particle\r\n    drawParticle(index: number) {\r\n        // This looks like we are drawing a line from head to tail for particle, \r\n        // but i can see in the ui we are getting a arc curved line, how? no idea need to understand\r\n        if (this.ctx) {\r\n            const particle = this.particles[index];\r\n            this.drawWish();\r\n            this.ctx.beginPath();\r\n            // move to the last tracked coordinates in the set, then draw a line to the current x and y\r\n            this.ctx.moveTo(particle.coordinates[particle.coordinates.length - 1][0], particle.coordinates[particle.coordinates.length - 1][1]);\r\n            this.ctx.lineTo(particle.x, particle.y);\r\n            this.ctx.strokeStyle = 'hsla(' + this.hue + ', 100%, ' + particle.brightness + '%, ' + particle.alpha + ')';\r\n            this.ctx.stroke();\r\n        }\r\n    }\r\n\r\n    createParticles( x: number, y: number ) {\r\n        // For each explosion we are creating 300 particles, wow, thats a lot\r\n        let particleCount = 100;\r\n        let type = Math.floor(random(1, 5));\r\n        while(particleCount--){\r\n            this.particles.push(new Particle(x, y, type, this.hue));\r\n        }\r\n    }\r\n\r\n    run() {\r\n        //requestAnimFrame(loop);\r\n        this.hue += 0.5;\r\n        if (this.ctx) {\r\n            this.ctx.globalCompositeOperation = \"destination-out\";\r\n            this.ctx.fillStyle =  'rgba(0, 0, 0, 0.3)';\r\n            this.ctx.fillRect(0, 0, this.cw, this.ch);\r\n\r\n            this.ctx.globalCompositeOperation = \"lighter\";\r\n\r\n            let i = this.fireworks.length;\r\n            while(i--)\r\n            {\r\n                this.drawFirework(i);\r\n                this.updateFirework(i);\r\n            }\r\n\r\n            // loop over each particle, draw it, update it\r\n            i = this.particles.length;\r\n            while( i-- ) {\r\n                this.drawParticle(i);\r\n                this.updateParticle(i);\r\n            }\r\n\r\n            if( this.timerTick >= this.timerTotal + this.randomTime ){\r\n                if (!this.mousedown){\r\n                    /* uniform */\r\n                    // fireworks.push( new Firework(cw/2, ch, 100, random(0, ch/2)));\r\n                    /* 0 to cw/2, more to*/\r\n                    // fireworks.push( new Firework(cw/2, ch, Math.floor(Math.sqrt(random(0, cw*cw/4))), random(0, ch/2)));\r\n\r\n                    let xPos = Math.pow(Math.floor((random(-Math.pow(this.cw/2, 1/3), Math.pow(this.cw/2, 1/3)))), 3);\r\n                    xPos += this.cw/2;\r\n                    this.fireworks.push( new Firework(this.cw/2, this.ch, xPos, random(0, this.ch/2)));\r\n                    // fireworks.push( new Firework(cw/2, ch, random(-10, 100), random(0, ch/2)));\r\n\r\n                    this.timerTick = 0;\r\n                    this.randomTime = Math.pow(random(2, 4), 2);\r\n                }\r\n            } else {\r\n                this.timerTick++;\r\n            }\r\n\r\n\r\n            // limit the rate at which fireworks get launched when mouse is down\r\n            if( this.limiterTick >= this.limiterTotal ) {\r\n                if( this.mousedown ) {\r\n                    // start the firework at the bottom middle of the screen, then set the current mouse coordinates as the target\r\n                    this.fireworks.push( new Firework( this.cw / 2, this.ch, this.mx, this.my ) );\r\n                    this.limiterTick = 0;\r\n                } else {\r\n                    this.limiterTick= this.limiterTotal;\r\n                }\r\n            } else {\r\n                this.limiterTick++;\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}